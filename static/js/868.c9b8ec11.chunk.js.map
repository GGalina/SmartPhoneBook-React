{"version":3,"file":"static/js/868.c9b8ec11.chunk.js","mappings":"wOAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,SAASC,KAA7B,EAEtBC,EAAyB,SAAAJ,GAAK,OAAIA,EAAMC,UAAUI,MAApB,EAE9BC,EAAkB,SAAAN,GAAK,OAAIA,EAAMC,UAAUC,SAASK,SAA7B,E,mBCFvBC,EAAgBC,EAAAA,GAAAA,IAAH,8HAObC,EAAOD,EAAAA,GAAAA,KAAH,0KAQJE,EAAYF,EAAAA,GAAAA,KAAH,qRAaTG,EAAQH,EAAAA,GAAAA,MAAH,yTAeLI,EAASJ,EAAAA,GAAAA,OAAH,yf,UCxCNK,EAAc,WACvB,IAAMZ,GAAWa,EAAAA,EAAAA,IAAYhB,GACvBiB,GAAWC,EAAAA,EAAAA,MAmBjB,OACI,SAACT,EAAD,WACI,UAACE,EAAD,CAAMQ,SAnBO,SAAAC,GACjBA,EAAMC,iBACN,MAAyBD,EAAME,OAAOC,SAA9BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEdtB,EAASuB,MAAK,SAAAC,GAAW,OACrBA,EAAYH,KAAKI,gBAAkBJ,EAAKK,MAAMD,aADzB,IAEnBE,MAAM,GAAD,OAAIN,EAAKK,MAAT,4BACLZ,GACEc,EAAAA,EAAAA,IAAW,CACPP,KAAMA,EAAKK,MACXJ,OAAQA,EAAOI,SAG3BL,EAAKK,MAAQ,GACbJ,EAAOI,MAAQ,EAClB,EAIO,WACI,SAACjB,EAAD,oBACA,SAACC,EAAD,CACImB,KAAK,OACLR,KAAK,OACLS,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGZ,SAACvB,EAAD,sBACA,SAACC,EAAD,CACImB,KAAK,MACLR,KAAK,SACLS,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAGZ,SAACrB,EAAD,CAAQkB,KAAK,SAAb,6BAIf,E,UCjDYI,EAAU1B,EAAAA,GAAAA,IAAH,wGAMP2B,EAAO3B,EAAAA,GAAAA,GAAH,wDAIJ4B,EAAW5B,EAAAA,GAAAA,GAAH,+HAOR6B,EAAY7B,EAAAA,GAAAA,OAAH,mc,UCZT8B,EAAc,WACvB,IAAMrC,GAAWa,EAAAA,EAAAA,IAAYhB,GACvBM,GAASU,EAAAA,EAAAA,IAAYX,GACrBG,GAAYQ,EAAAA,EAAAA,IAAYT,GAExBU,GAAWC,EAAAA,EAAAA,OAEjBuB,EAAAA,EAAAA,YAAU,WACNxB,GAASyB,EAAAA,EAAAA,MACZ,GAAE,CAACzB,IAEJ,IAAM0B,EAAWxC,EAASG,QAAO,SAAAqB,GAAW,OACxCA,EAAYH,KAAKI,cAAcgB,SAAStC,EADA,IAQ5C,OACI,UAAC8B,EAAD,WACK5B,IAAa,SAACqC,EAAA,EAAD,KACL,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUG,QAAS,IAChB,SAACT,EAAD,UACKM,EAASI,KAAI,gBAAGC,EAAH,EAAGA,GAAIxB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,UAACa,EAAD,WACKd,EADL,KACaC,GACT,SAACc,EAAD,CACIP,KAAK,SACLiB,QAAS,kBAdd,SAAAD,GACnB,OAAO/B,GAASiC,EAAAA,EAAAA,IAAcF,GACjC,CAY0CG,CAAeH,EAArB,EAFb,sBAFWA,EADL,QAejC,E,UC5CYI,EAAa1C,EAAAA,GAAAA,IAAH,iDAIV2C,EAAa3C,EAAAA,GAAAA,EAAH,kLASVG,EAAQH,EAAAA,GAAAA,MAAH,yTCXL4C,EAAS,WAClB,IAAMrC,GAAWC,EAAAA,EAAAA,MAMjB,OACI,UAACkC,EAAD,YACI,SAACC,EAAD,qCACA,SAAC,EAAD,CACIE,SARK,SAAAnC,GACbH,GAASuC,EAAAA,EAAAA,GAAcpC,EAAMqC,cAAc5B,MAAMD,eACpD,EAOWI,KAAK,WAIpB,E,UCjBY0B,EAAYhD,EAAAA,GAAAA,IAAH,wGAMTiD,EAAQjD,EAAAA,GAAAA,IAAH,2LAGUkD,GAMfC,EAAQnD,EAAAA,GAAAA,GAAH,qPAYLoD,EAAWpD,EAAAA,GAAAA,GAAH,0JCzBN,SAASqD,IACtB,OACI,UAACL,EAAD,YACE,SAACC,EAAD,KACA,SAACE,EAAD,yBACA,SAAC9C,EAAD,KACA,SAAC+C,EAAD,wBACA,SAACR,EAAD,KACA,SAACd,EAAD,MAGP,C","sources":["Redux/Phonebook/phonebookSelectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/Phonebook.jsx"],"sourcesContent":["export const selectContacts = state => state.phonebook.contacts.items;\n\nexport const selectFilteredContacts = state => state.phonebook.filter;\n\nexport const selectIsLoading = state => state.phonebook.contacts.isLoading;","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n    background-color: #484f56;\n    display: flex;\n    justify-content: center;\n    padding: 20px;\n`;\n\nexport const Form = styled.form`\n    width: 600px;\n    background-color: #99a7b5;\n    border-radius: 10px;\n    box-shadow: 0px 0px 20px 10px #484f56;\n    padding: 20px 10px;\n`;\n\nexport const FormTitle = styled.span`\n    font-family: 'Roboto', sans-serif;\n    font-size: 24px;\n    font-weight: 600;\n    text-align: left;\n    padding: 10px;\n    display: flex;\n    width: 600px;\n    justify-content: space-between;\n    align-items: flex-end;\n    color: #F2F2F2;\n`;\n\nexport const Input = styled.input`\n    font-family: 'Roboto', sans-serif;\n    font-size: 18px;\n    padding-left: 10px;\n    width: 400px;\n    height: 35px;\n    border-radius: 10px;\n    outline: none;\n    border: none;\n    box-shadow: 2px 2px 7px 0px #1f1d1d;\n    :focus {\n        border: 2px solid #55bb55;\n    }\n`;\n\nexport const Button = styled.button`\n    font-family: 'Roboto', sans-serif;\n    text-decoration: none;\n    font-size: 18px;\n    font-weight: 600;\n    text-align: center;\n    display: block;\n    padding: 10px 30px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n\n    border-radius: 10px;\n    background-color: #25282c;\n    color: #F2F2F2;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    margin: 20px auto;\n    :hover {\n        color: #25282c;\n        background-color: #F2F2F2;\n    }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'Redux/Phonebook/phonebookOperations';\nimport { selectContacts } from 'Redux/Phonebook/phonebookSelectors';\nimport { FormContainer, FormTitle, Input, Button, Form } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const { name, number } = event.target.elements;\n\n        contacts.find(contactItem =>\n            contactItem.name.toLowerCase() === name.value.toLowerCase())\n            ? alert(`${name.value} is already in contacts`)\n            : dispatch(\n                addContact({\n                    name: name.value,\n                    number: number.value\n                })\n            )\n        name.value = '';\n        number.value = '';\n    };\n\n    return (\n        <FormContainer>\n            <Form onSubmit={handleSubmit}>\n                <FormTitle>Name</FormTitle>\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n\n                <FormTitle>Number</FormTitle>\n                <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n\n                <Button type=\"submit\">Add contact</Button>\n            </Form>\n        </FormContainer>\n    );\n};","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background-color: #6f7a84;\n    padding: 10px 40px;\n    margin-top: 20px;\n`;\n\nexport const List = styled.ul`\n    list-style-type: '☎';\n`;\n\nexport const ListItem = styled.li`\n    font-family: 'Roboto', sans-serif;\n    font-size: 24px;\n    padding: 10px;\n    color: #F2F2F2;\n`;\n\nexport const DeleteBtn = styled.button`\n    font-family: 'Roboto', sans-serif;\n    font-size: 20px;\n    font-weight: 600;\n    text-align: center;\n    display: inline-block;\n    padding: 10px 15px;\n    margin-left: 15px;\n    border-radius: 10px;\n    color: #F2F2F2;\n    background-color: #25282c;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    position: absolute;\n    right: 25px;\n    :hover {\n        background-color: #fe1101;\n    }\n`;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectFilteredContacts, selectIsLoading } from 'Redux/Phonebook/phonebookSelectors';\nimport { getContacts, deleteContact } from 'Redux/Phonebook/phonebookOperations';\nimport { ListItem, DeleteBtn, List, Wrapper } from './ContactList.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilteredContacts);\n    const isLoading = useSelector(selectIsLoading);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getContacts());\n    }, [dispatch]);\n\n    const filtered = contacts.filter(contactItem =>\n        contactItem.name.toLowerCase().includes(filter)\n    );\n\n    const deleteContacts = id => {\n        return dispatch(deleteContact(id));\n    };\n\n    return (\n        <Wrapper>\n            {isLoading && <Loader />}\n            {filtered?.length > 0 && (\n                <List>\n                    {filtered.map(({ id, name, number }) => (\n                        <ListItem key={id}>\n                            {name}: {number}\n                            <DeleteBtn\n                                type=\"button\"\n                                onClick={() => deleteContacts(id)}\n                            >\n                                Delete\n                            </DeleteBtn>\n                        </ListItem>\n                    ))}\n                </List>\n            )} \n        </Wrapper>\n    );\n};","import styled from 'styled-components';\n\nexport const FilterArea = styled.div`\n    padding-left: 40px;\n`;\n\nexport const FilterDesc = styled.p`\n    font-family: 'Roboto', sans-serif;\n    font-size: 500;\n    font-size: 18px;\n    color: #25282c;\n    padding-bottom: 5px;\n    padding-left: 5px;\n`;\n\nexport const Input = styled.input`\n    font-family: 'Roboto', sans-serif;\n    font-size: 18px;\n    padding-left: 10px;\n    width: 250px;\n    height: 35px;\n    border-radius: 10px;\n    outline: none;\n    border: none;\n    box-shadow: 2px 2px 7px 0px #1f1d1d;\n    :focus {\n        border: 2px solid #55bb55;\n    }\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'Redux/Phonebook/phonebookSlice';\nimport { FilterArea, FilterDesc, Input } from './Filter.styled';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n\n    const onFilter = event => {\n        dispatch(filterContact(event.currentTarget.value.toLowerCase()));\n    };\n\n    return (\n        <FilterArea>\n            <FilterDesc>Find contacts by name</FilterDesc>\n            <Input\n                onChange={onFilter}\n                type=\"text\"\n            />\n        </FilterArea>\n    );\n};","import styled from 'styled-components';\nimport backgroundGrey from '../../assets/background-grey.jpg';\n\nexport const Container = styled.div`\n    background-color: #99a7b5;\n    margin: 0 auto;\n    padding-bottom: 30px;\n`;\n\nexport const Image = styled.div`\n    width: 100%;\n    height: 50px;\n    background-image: url(${backgroundGrey}); \n    background-size: cover;\n    background-repeat: no-repeat;\n    box-sizing: border-box;\n`;\n\nexport const Title = styled.h1`\n    font-family: 'Roboto', sans-serif;\n    font-size: 28px;\n    font-weight: 600;\n    display: block;\n    text-align: left;\n    padding-top: 10px;\n    color: #25282c;\n    text-align: center;\n    padding: 20px 0;\n`;\n\nexport const SubTitle = styled.h2`\n    font-family: 'Roboto', sans-serif;\n    font-size: 28px;\n    text-align: center;\n    color: #25282c;\n    padding: 20px 0;\n`;","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, Title, SubTitle,  Image} from './Phonebook.styled';\n\nexport default function Phonebook() {\n  return (\n      <Container>\n        <Image/>\n        <Title>Phonebook</Title>\n        <ContactForm />\n        <SubTitle>Contacts</SubTitle>\n        <Filter />\n        <ContactList />\n      </Container>\n  );\n};\n"],"names":["selectContacts","state","phonebook","contacts","items","selectFilteredContacts","filter","selectIsLoading","isLoading","FormContainer","styled","Form","FormTitle","Input","Button","ContactForm","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","target","elements","name","number","find","contactItem","toLowerCase","value","alert","addContact","type","pattern","title","required","Wrapper","List","ListItem","DeleteBtn","ContactList","useEffect","getContacts","filtered","includes","Loader","length","map","id","onClick","deleteContact","deleteContacts","FilterArea","FilterDesc","Filter","onChange","filterContact","currentTarget","Container","Image","backgroundGrey","Title","SubTitle","Phonebook"],"sourceRoot":""}